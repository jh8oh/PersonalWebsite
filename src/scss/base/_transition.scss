// ---------------------------------------------------------------------------
// Contains everything to do with transitions
// ---------------------------------------------------------------------------

// Vue transitions
// -enter/-leave: Starting state of entering/leaving object
// -enter-to/-leave-to: Ending state of entering/leaving object
// -enter-active/leave-active: Active state of entering/leaving object (Persists throughout the entire phase)

// Page transitions (Page slides in on top of previous page)
%page-transition-active {
  position: fixed;
  min-height: $content-height;
  width: 100%;
  top: 56px;
  background: $color-background;
}

@mixin page-slide-transition($translateX) {
  &-enter {
    transform: translateX($translateX);

    &-to {
      transform: translateX(0%);
    }

    &-active {
      @extend %page-transition-active;
      @include transition(transform 0.4s ease-in-out);
    }
  }

  &-leave-active {
    @extend %page-transition-active;
    opacity: 0;
  }
}

// Page slides from right-to-left
.page-slide-ltr {
  @include page-slide-transition(100%);
}

// Page slides from left-to-right
.page-slide-rtl {
  @include page-slide-transition(-100%);
}

// Shrink old object and grow new object with shutter borders
.shrink-grow-with-border {
  $transition-time: 0.2s;

  @mixin pseudo-elements($top) {
    @extend %neon-box-shadow;
    @include shutter-border-horizontal(1px, $top, 100%);
    @include transition(max-width $transition-time ease-in-out);
  }

  @mixin shrink-grow-transition(
    $start-height: 0,
    $end-height: 0,
    $start-padding: 0,
    $end-padding: 0,
    $pseudo-start-width: 0,
    $pseudo-end-width: 0
  ) {
    max-height: $start-height;
    padding: $start-padding;

    &:before,
    &:after {
      max-width: $pseudo-start-width;
    }

    &-to {
      max-height: $end-height;
      padding: $end-padding;

      &:before,
      &:after {
        max-width: $pseudo-end-width;
      }
    }

    &-active {
      position: relative;
      overflow: hidden;
      @include transition(all $transition-time ease-in-out);

      &:before {
        @include pseudo-elements(2px);
      }

      &:after {
        @include pseudo-elements(calc(100% - 2px));
      }
    }
  }

  &-enter {
    @include shrink-grow-transition($end-height: 100vh, $end-padding: 4px 0, $pseudo-start-width: 100vw);
  }

  &-leave {
    @include shrink-grow-transition($start-height: 100vh, $start-padding: 4px 0, $pseudo-end-width: 100vw);
  }
}
